<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>gondor-master</artifactId>
        <groupId>com.gondor.master</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>gondor-generate-registry</artifactId>

    <dependencies>
        <!--spring boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- eureka-server 服务端 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>gondor-registry</finalName>
        <!--配置文件在编译时复制到classes目录下-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- springboot工程打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.7.RELEASE</version>
                <configuration>
                    <!-- 是否打出可执行的jar包(仅支持Linux格式) -->
                    <executable>true</executable>
                    <!-- 插件方式指定打包类型以及启动类 -->
                    <mainClass>com.gondor.registry.GondorRegistryApplication</mainClass>
                    <layout>JAR</layout>
                    <!--
                    <mainClass>org.springframework.boot.loader.warLauncher</mainClass>
                    <layout>WAR</layout>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- 默认goal。在mvn package之后，再次打包可执行的jar/war，同时保留mvn package生成的jar/war为.origin -->
                            <goal>repackage</goal>
                            <!-- 运行Spring Boot工程
                            <goal>run</goal>
                                 在mvn integration-test阶段，进行Spring Boot应用生命周期的管理
                            <goal>start</goal>
                                 在mvn integration-test阶段，进行Spring Boot应用生命周期的管理
                            <goal>stop</goal>
                            -->
                            <!-- 生成Actuator使用的构建信息文件build-info.properties -->
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>